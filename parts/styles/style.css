@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

button {
  cursor: pointer;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
  /**
    Блок скролла при открытом мобильном меню
   */
}
body.lock {
  overflow: hidden;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  -webkit-transition-property: fill, stroke;
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    -webkit-animation-duration: 0.01ms !important;
            animation-duration: 0.01ms !important;
    -webkit-animation-iteration-count: 1 !important;
            animation-iteration-count: 1 !important;
    -webkit-transition-duration: 0.01ms !important;
            transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
a, li, ul {
  text-decoration: none;
}

@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Light.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --border-radius: 10px;
  --border: 1px solid rgb(62, 62, 62);
  --font-family-base: "Roboto", sans-serif;
  --color-button: rgb(24, 24, 255);
  --color-dark: black;
  --color-gray: rgb(25, 29, 49);
  --color-light: white;
  --color-bg: rgb(0, 0, 31);
  --color-red:rgb(255, 82, 82);
  --container-width: 1240px;
  --container-padding-x: 20px;
  --section-padding-y: 70px;
  --input-height: 59px;
  --button-height: 68px;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
  margin-top: 60px;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 270px 30px 1fr;
  grid-template-columns: 270px 1fr;
  grid-gap: 30px;
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important;
  }
}

body {
  font-size: clamp(16px, 1.25vw, 18px);
  font-family: var(--font-family-base);
  font-weight: 400;
  line-height: 1.28;
  color: var(--color-light);
  background-color: var(--color-bg);
  height: auto;
}

a,
button,
input,
textarea,
svg * {
  -webkit-transition-duration: var(--transition-duration);
          transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1, h2, h3, h4 {
  font-weight: 500;
}

h1, .h1 {
  font-size: clamp(43px, 4.1666666667vw, 60px);
}

h2, .h2 {
  font-size: clamp(28px, 2.7777777778vw, 40px);
}

h3, .h3 {
  font-size: clamp(26px, 2.0833333333vw, 30px);
}

h4, .h4 {
  font-size: clamp(18px, 1.3888888889vw, 20px);
}

.navbar {
  position: sticky;
  top: 30px;
  padding: 30px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: start;
  row-gap: 10px;
  border-radius: var(--border-radius);
  background-color: var(--color-gray);
}
.navbar__link {
  color: var(--color-light);
}
@media (hover: hover) {
  .navbar__link:hover {
    color: var(--color-red);
  }
}
@media (hover: none) {
  .navbar__link:active {
    color: var(--color-red);
  }
}

.section {
  padding: 30px 0 40px 0;
  position: relative;
}
.section__title {
  padding-bottom: 20px;
  font-weight: 700;
}

.button {
  padding: 0;
  background-color: transparent;
  border: none;
  padding: 15px 34px;
  color: var(--color-light);
  font-weight: 700;
  background-color: var(--color-button);
  border-radius: var(--border-radius);
}
@media (hover: hover) {
  .button:hover {
    background-color: var(--color-light);
    color: var(--color-dark);
  }
}
@media (hover: none) {
  .button:active {
    background-color: var(--color-light);
    color: var(--color-dark);
  }
}
.button:active {
  -webkit-transform: scale(0.95);
          transform: scale(0.95);
}
.button--second {
  background-color: var(--color-light);
  color: var(--color-dark);
}
@media (hover: hover) {
  .button--second:hover {
    background-color: var(--color-red);
  }
}
@media (hover: none) {
  .button--second:active {
    background-color: var(--color-red);
  }
}

.toolptips {
  padding: 10px;
  cursor: default;
  text-decoration: underline;
  -webkit-transition: color 150ms ease-in-out;
  transition: color 150ms ease-in-out;
}
@media (hover: hover) {
  .toolptips:hover {
    color: var(--color-red);
    text-decoration: none;
  }
}
@media (hover: none) {
  .toolptips:active {
    color: var(--color-red);
    text-decoration: none;
  }
}

[data-tooltip] {
  position: relative;
}
[data-tooltip]:before {
  content: attr(data-tooltip);
  position: absolute;
  left: calc(100% + 14px);
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  width: 100%;
  max-width: 217px;
  background-color: var(--color-gray);
  border-radius: var(--border-radius);
  color: var(--color-light);
  padding: 20px;
  font-size: 14px;
  opacity: 0;
  visibility: hidden;
  -webkit-transition: 0.2s;
  transition: 0.2s;
}
[data-tooltip]::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 20px;
  aspect-ratio: 1;
  content: "";
  background-color: var(--color-gray);
  left: calc(100% + 14px);
  rotate: 45deg;
  clip-path: polygon(0 0, 0 100%, 100% 100%);
  opacity: 0;
  visibility: hidden;
  -webkit-transition: 0.2s;
  transition: 0.2s;
}
@media (hover: hover) {
  [data-tooltip]:hover::before, [data-tooltip]:hover::after {
    visibility: visible;
    left: calc(100% + 17px);
    opacity: 1;
  }
}
@media (hover: none) {
  [data-tooltip]:active::before, [data-tooltip]:active::after {
    visibility: visible;
    left: calc(100% + 17px);
    opacity: 1;
  }
}
/*# sourceMappingURL=style.css.map */